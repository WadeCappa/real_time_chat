// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: chat_watcher/chat-watcher.proto

package chat_watcher

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *ChannelEvent          `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchChannelResponse) Reset() {
	*x = WatchChannelResponse{}
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchChannelResponse) ProtoMessage() {}

func (x *WatchChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchChannelResponse.ProtoReflect.Descriptor instead.
func (*WatchChannelResponse) Descriptor() ([]byte, []int) {
	return file_chat_watcher_chat_watcher_proto_rawDescGZIP(), []int{0}
}

func (x *WatchChannelResponse) GetEvent() *ChannelEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type WatchChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchChannelRequest) Reset() {
	*x = WatchChannelRequest{}
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchChannelRequest) ProtoMessage() {}

func (x *WatchChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchChannelRequest.ProtoReflect.Descriptor instead.
func (*WatchChannelRequest) Descriptor() ([]byte, []int) {
	return file_chat_watcher_chat_watcher_proto_rawDescGZIP(), []int{1}
}

func (x *WatchChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type NewMessageEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conent        string                 `protobuf:"bytes,1,opt,name=conent,proto3" json:"conent,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ChannelId     int64                  `protobuf:"varint,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMessageEvent) Reset() {
	*x = NewMessageEvent{}
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMessageEvent) ProtoMessage() {}

func (x *NewMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMessageEvent.ProtoReflect.Descriptor instead.
func (*NewMessageEvent) Descriptor() ([]byte, []int) {
	return file_chat_watcher_chat_watcher_proto_rawDescGZIP(), []int{2}
}

func (x *NewMessageEvent) GetConent() string {
	if x != nil {
		return x.Conent
	}
	return ""
}

func (x *NewMessageEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NewMessageEvent) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *NewMessageEvent) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UnknownEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnknownEvent) Reset() {
	*x = UnknownEvent{}
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnknownEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownEvent) ProtoMessage() {}

func (x *UnknownEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownEvent.ProtoReflect.Descriptor instead.
func (*UnknownEvent) Descriptor() ([]byte, []int) {
	return file_chat_watcher_chat_watcher_proto_rawDescGZIP(), []int{3}
}

func (x *UnknownEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ChannelEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventUnion:
	//
	//	*ChannelEvent_NewMessage
	//	*ChannelEvent_UnknownEvent
	EventUnion         isChannelEvent_EventUnion `protobuf_oneof:"EventUnion"`
	TimePostedUnixTime int64                     `protobuf:"varint,3,opt,name=timePostedUnixTime,proto3" json:"timePostedUnixTime,omitempty"`
	Offest             int64                     `protobuf:"varint,4,opt,name=offest,proto3" json:"offest,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChannelEvent) Reset() {
	*x = ChannelEvent{}
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEvent) ProtoMessage() {}

func (x *ChannelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_watcher_chat_watcher_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEvent.ProtoReflect.Descriptor instead.
func (*ChannelEvent) Descriptor() ([]byte, []int) {
	return file_chat_watcher_chat_watcher_proto_rawDescGZIP(), []int{4}
}

func (x *ChannelEvent) GetEventUnion() isChannelEvent_EventUnion {
	if x != nil {
		return x.EventUnion
	}
	return nil
}

func (x *ChannelEvent) GetNewMessage() *NewMessageEvent {
	if x != nil {
		if x, ok := x.EventUnion.(*ChannelEvent_NewMessage); ok {
			return x.NewMessage
		}
	}
	return nil
}

func (x *ChannelEvent) GetUnknownEvent() *UnknownEvent {
	if x != nil {
		if x, ok := x.EventUnion.(*ChannelEvent_UnknownEvent); ok {
			return x.UnknownEvent
		}
	}
	return nil
}

func (x *ChannelEvent) GetTimePostedUnixTime() int64 {
	if x != nil {
		return x.TimePostedUnixTime
	}
	return 0
}

func (x *ChannelEvent) GetOffest() int64 {
	if x != nil {
		return x.Offest
	}
	return 0
}

type isChannelEvent_EventUnion interface {
	isChannelEvent_EventUnion()
}

type ChannelEvent_NewMessage struct {
	NewMessage *NewMessageEvent `protobuf:"bytes,1,opt,name=newMessage,proto3,oneof"`
}

type ChannelEvent_UnknownEvent struct {
	UnknownEvent *UnknownEvent `protobuf:"bytes,2,opt,name=unknownEvent,proto3,oneof"`
}

func (*ChannelEvent_NewMessage) isChannelEvent_EventUnion() {}

func (*ChannelEvent_UnknownEvent) isChannelEvent_EventUnion() {}

var File_chat_watcher_chat_watcher_proto protoreflect.FileDescriptor

const file_chat_watcher_chat_watcher_proto_rawDesc = "" +
	"\n" +
	"\x1fchat_watcher/chat-watcher.proto\x12\fchat_watcher\"H\n" +
	"\x14WatchChannelResponse\x120\n" +
	"\x05event\x18\x01 \x01(\v2\x1a.chat_watcher.ChannelEventR\x05event\"3\n" +
	"\x13WatchChannelRequest\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\x03R\tchannelId\"w\n" +
	"\x0fNewMessageEvent\x12\x16\n" +
	"\x06conent\x18\x01 \x01(\tR\x06conent\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\x03R\x06userId\x12\x1c\n" +
	"\tchannelId\x18\x03 \x01(\x03R\tchannelId\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\"0\n" +
	"\fUnknownEvent\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\"\xe7\x01\n" +
	"\fChannelEvent\x12?\n" +
	"\n" +
	"newMessage\x18\x01 \x01(\v2\x1d.chat_watcher.NewMessageEventH\x00R\n" +
	"newMessage\x12@\n" +
	"\funknownEvent\x18\x02 \x01(\v2\x1a.chat_watcher.UnknownEventH\x00R\funknownEvent\x12.\n" +
	"\x12timePostedUnixTime\x18\x03 \x01(\x03R\x12timePostedUnixTime\x12\x16\n" +
	"\x06offest\x18\x04 \x01(\x03R\x06offestB\f\n" +
	"\n" +
	"EventUnion2n\n" +
	"\x11chatwatcherserver\x12Y\n" +
	"\fWatchChannel\x12!.chat_watcher.WatchChannelRequest\x1a\".chat_watcher.WatchChannelResponse\"\x000\x01B?Z=github.com/WadeCappa/real_time_chat/chat-watcher/chat-watcherb\x06proto3"

var (
	file_chat_watcher_chat_watcher_proto_rawDescOnce sync.Once
	file_chat_watcher_chat_watcher_proto_rawDescData []byte
)

func file_chat_watcher_chat_watcher_proto_rawDescGZIP() []byte {
	file_chat_watcher_chat_watcher_proto_rawDescOnce.Do(func() {
		file_chat_watcher_chat_watcher_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_watcher_chat_watcher_proto_rawDesc), len(file_chat_watcher_chat_watcher_proto_rawDesc)))
	})
	return file_chat_watcher_chat_watcher_proto_rawDescData
}

var file_chat_watcher_chat_watcher_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chat_watcher_chat_watcher_proto_goTypes = []any{
	(*WatchChannelResponse)(nil), // 0: chat_watcher.WatchChannelResponse
	(*WatchChannelRequest)(nil),  // 1: chat_watcher.WatchChannelRequest
	(*NewMessageEvent)(nil),      // 2: chat_watcher.NewMessageEvent
	(*UnknownEvent)(nil),         // 3: chat_watcher.UnknownEvent
	(*ChannelEvent)(nil),         // 4: chat_watcher.ChannelEvent
}
var file_chat_watcher_chat_watcher_proto_depIdxs = []int32{
	4, // 0: chat_watcher.WatchChannelResponse.event:type_name -> chat_watcher.ChannelEvent
	2, // 1: chat_watcher.ChannelEvent.newMessage:type_name -> chat_watcher.NewMessageEvent
	3, // 2: chat_watcher.ChannelEvent.unknownEvent:type_name -> chat_watcher.UnknownEvent
	1, // 3: chat_watcher.chatwatcherserver.WatchChannel:input_type -> chat_watcher.WatchChannelRequest
	0, // 4: chat_watcher.chatwatcherserver.WatchChannel:output_type -> chat_watcher.WatchChannelResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chat_watcher_chat_watcher_proto_init() }
func file_chat_watcher_chat_watcher_proto_init() {
	if File_chat_watcher_chat_watcher_proto != nil {
		return
	}
	file_chat_watcher_chat_watcher_proto_msgTypes[4].OneofWrappers = []any{
		(*ChannelEvent_NewMessage)(nil),
		(*ChannelEvent_UnknownEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_watcher_chat_watcher_proto_rawDesc), len(file_chat_watcher_chat_watcher_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_watcher_chat_watcher_proto_goTypes,
		DependencyIndexes: file_chat_watcher_chat_watcher_proto_depIdxs,
		MessageInfos:      file_chat_watcher_chat_watcher_proto_msgTypes,
	}.Build()
	File_chat_watcher_chat_watcher_proto = out.File
	file_chat_watcher_chat_watcher_proto_goTypes = nil
	file_chat_watcher_chat_watcher_proto_depIdxs = nil
}
