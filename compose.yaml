services:
  rabbitmq:
    image: rabbitmq:4-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
        - rabbit_lib:/var/lib/rabbitmq/
        - rabbit_log:/var/log/rabbitmq
  db:
    build: db 
    user: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=/run/secrets/postgres_db_password
      - POSTGRES_USER=/run/secrets/postgres_db_user
      - POSTGRES_DB=/run/secrets/postgres_db
    volumes: 
      - db_volume:/var/lib/postgresql/data
  backend:
    build: backend 
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_PASSWORD=/run/secrets/postgres_db_password
      - POSTGRES_USER=/run/secrets/postgres_db_user
      - PGUSER=/run/secrets/postgres_db_user
      - POSTGRES_DB=/run/secrets/postgres_db
      - MODE=$MODE
    depends_on:
      rabbitmq:
        condition: service_healthy
  frontend:
    build: 
      context: frontend
      args:
        - MODE=$MODE
    ports:
      - "3000:3000"
    depends_on:
      - backend
  caddy:
    image: caddy:2.8.4-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $PWD/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
secrets:
  postgres_db:
    file: secrets/postgres_db.txt
  postgres_db_user:
    file: secrets/postgres_db_user.txt
  postgres_db_password:
    file: secrets/postgres_pass.txt
volumes:
  db_volume:
  caddy_data:
  caddy_config:
  rabbit_lib:
  rabbit_log: